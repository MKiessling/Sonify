/*******************************************************************************
 * Copyright (c) 2012 BragiSoft, Inc.
 * This source is subject to the BragiSoft Permissive License.
 * Please see the License.txt file for more information.
 * All other rights reserved.
 * 
 * THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY 
 * KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
 * PARTICULAR PURPOSE.
 * 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Contributors:
 * Jan-Christoph Klie - not Everything
 * Christoph Schabert - the other stuff
 * 
 *******************************************************************************/

package com.bragi.sonify.composer.lsystem;

import javax.sound.midi.Sequence;

import com.bragi.sonify.composer.IComposer;

/**
 * L-Systems - Music Generated by Formal Grammars
 * 
 * 
 * built up of a track
 * 
 * |--intro--|--middelpart1--|--bridge--|--middelpart2--|--outro--|
 *  * typical: 
 * |----8----|------32-------|----4-----|-----32--------|----4----| => 80 Takte
 * |---10%---|------40%------|----5%----|-----40%-------|---5%----|
 * 
 * @param tracklength
 * 		gives the tracklength in 1/4 Note.
 * @param introlength
 * 		gives the prozentual length of the intro (bestpracktis:  #4)
 * @param outrolength
 * 		gives the prozentual length of the outro (bestpracktis:  #4)
 * @param middelpartlength
 * 		gives the prozentual length of the middelpart1 and middelpart2 (bestpracktis:  #4)
 * @param bridgelength
 * 		gives the prozentual length of the bridge (bestpracktis:  #4)
 * 
 */
public class LSystemComposer implements IComposer {
	
int tracklength;
int introlength = 8;
int outrolength = 4;
int middelpartlength = 32;
int bridgelength = 4;

int[] drumset = {0,2,1,0}; //rand numbers

	/**plays a Note in midi
	 * 
	 * @param Note 
	 */
	private void playNote(int Note){
		
		return;
	}
	
	


	@Override
	public Sequence createMidi(String text) {
		
		tracklength = text.length();
		
		for(int i = 1; i > tracklength;i++){
			playNote(text.charAt(i));					//Hauptmelodie
			if(i >= introlength && i < outrolength){
				playNote(text.charAt(i) + 12);			//Zweite Stimme eine Oktave höher
				if(i < middelpartlength && i >= middelpartlength){
					playNote(drumset[i/4]);				//play Drumset
				}
			}
		}
		
		
		
		return null;
	}

}
